pip install ipython

import this

for i in [1, 2, 3, 4, 5]:
  print (i)                       # primeira linha para o bloco “for i”
for j in [1, 2, 3, 4, 5]:
  print (j)                       # primeira linha para o bloco “for j”
  print (i + j)                   # última linha para o bloco “for j”
  print (i)                       # última linha para o bloco “for i”
  print ("done looping"),

import re


import matplotlib.pyplot as plt

5/2

def double(x):
  return x * 2
def apply_to_one(f):
  return f(1)
my_double = double # refere-se à função definida anteriormente
x = apply_to_one(my_double) # é igual a 2
print (x)
print (my_double)
print (double)

def my_print(message="my default message"):
  print (message)
my_print("hello") # exibe 'hello'
my_print() # exibe 'my default message'

def subtract(a=0, b=0):
  return a - b
#subtract(10, 5) # retorna S
#subtract(0, 5) # retorna -S
subtract(b=5) # mesmo que o anterior

single_quoted_string = 'data science'
double_quoted_string = "data science"
print (single_quoted_string,double_quoted_string)

tab_string = "\t" # representa o caractere tab
len(tab_string) # é 1

try:
  print (0 / 0)
except ZeroDivisionError:
  print ("cannot divide by zero")

integer_list = [1, 2, 3]
heterogeneous_list = ["string", 0.1, True]
list_of_lists = [ integer_list, heterogeneous_list, [] ]
list_length = len(integer_list) # é igual a 3
list_sum = sum(integer_list) # é igual a 6
print (list_of_lists)

x = range(10) 
print (x)
print (x[0])
print (x[1])
print (x[-1])
first_three = x[:3] # [-1, 1, 2]
print (first_three)
three_to_end = x[3:]; # [3, 4, ..., 9]
print (three_to_end)
one_to_four = x[1:5] # [1, 2, 3, 4]
last_three = x[-3:] # [7, 8, 9]
without_first_and_last = x[1:-1]; # [1, 2, ..., 8]
copy_of_x = x[:] # [-1, 1, 2, ..., 9]
print (copy_of_x)

1 in [1, 2, 3] # Verdadeiro
0 in [1, 2, 3] # Falso

x = [1, 2, 3]
y = x + [4, 5, 6] # y é[1, 2, 3, 4, 5, 6]; x não mudou
print (y)

x = [1, 2, 3]
x.append(0) # x agora é [1, 2, 3, 0]
print (x)
y = x[-1] # é igual a 0
print (y)
z = len(x) # é igual a 4
print (z)

my_list = [1, 2]
my_tuple = (1, 2)
other_tuple = 3, 4
my_list[1] = 3 # my_list agora é [1, 3]
try:
  my_tuple[1] = 3
except TypeError:
  print ("cannot modify a tuple")

def sum_and_product(x, y):
  return (x + y),(x * y)
sp = sum_and_product(2, 3) # é igual (5, 6)
s, p = sum_and_product(5, 10) # s é 15, p é 50
